openapi: 3.0.0
info:
  title: Mood API
  version: 1.0.0
paths:
  /moods:
    get:
      summary: Get all moods
      responses:
        "200":
          description: OK
      tags:
        - moods
    post:
      summary: Create a new mood
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MoodInput"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MoodOutput"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      tags:
        - moods
  /moods/{mood_id}:
    get:
      summary: Get a mood by ID
      parameters:
        - name: mood_id
          in: path
          required: true
          description: The ID of the mood to retrieve
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MoodOutput"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      tags:
        - moods
    put:
      summary: Update a mood by ID
      parameters:
        - name: mood_id
          in: path
          required: true
          description: The ID of the mood to update
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MoodInput"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MoodOutput"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      tags:
        - moods
    delete:
      summary: Delete a mood by ID
      parameters:
        - name: mood_id
          in: path
          required: true
          description: The ID of the mood to delete
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Message"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:
    MoodInput:
      type: object
      properties:
        date:
          type: string
          format: date-time
          description: The date of the mood
        feeling:
          type: string
          description: The feeling of the mood
        intensity:
          type: integer
          description: The intensity of the mood
        comments:
          type: string
          description: The comments of the mood
        activity:
          type: string
          description: The activity of the mood
      required:
        - date
        - feeling
        - intensity
      example:
        date: "2023-04-29T12:34:56Z"
        feeling: happy
        intensity: 5
        comments: Feeling great today!
        activity: Working on a new project
    MoodOutput:
      type: object
      properties:
        id:
          type: string
          description: The ID of the mood
        date:
          type: string
          format: date-time
          description: The date of the mood
        feeling:
          type: string
          description: The feeling of the mood
        intensity:
          type: integer
          description: The intensity of the mood
        comments:
          type: string
          description: The comments of the mood
        activity:
          type: string
          description: The activity of the mood
        created_on:
          type: string
          format: date-time
          description: The datetime the mood was created
        updated_on:
          type: string
          format: date-time
          description: The datetime the mood was last updated
      required:
        - id
        - date
        - feeling
        - intensity
        - created_on
        - updated_on
      example:
        id: 68f01417-84d6-44a6-920f-406ec3b7f90f
        date: "2023-04-29T12:34:56Z"
        feeling: happy
        intensity: 5
        comments: Feeling great today!
        activity: Working on a new project
        created_on: "2023-04-29T12:34:56Z"
        updated_on: "2023-04-29T12:34:56Z"
    Error:
      type: object
      properties:
        error:
          type: string
          description: The error message
      required:
        - error
      example:
        error: Invalid data
    Message:
      type: object
      properties:
        message:
          type: string
          description: The message
      required:
        - message
      example:
        message: Mood deleted successfully
