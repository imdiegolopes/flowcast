openapi: 3.0.0
info:
  title: mood API
  version: 1.0.0
servers:
  - url: http://localhost:5000
paths:
  /v1/moods:
    get:
      summary: Get all moods
      description: Returns a list of all moods.
      responses:
        '200':
          description: A JSON array of moods
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/mood'
    post:
      summary: Create a mood
      description: Creates a new mood with the given data.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/moodInput'
      responses:
        '201':
          description: The newly created mood
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mood'
  /v1/moods/{id}:
    get:
      summary: Get a mood by ID
      description: Returns a single mood with the given ID.
      parameters:
        - name: id
          in: path
          description: The ID of the mood to retrieve
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: The requested mood
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mood'
    put:
      summary: Update a mood by ID
      description: Updates the mood with the given ID with the provided data.
      parameters:
        - name: id
          in: path
          description: The ID of the mood to update
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/moodInput'
      responses:
        '200':
          description: The updated mood
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mood'
    delete:
      summary: Delete a mood by ID
      description: Deletes the mood with the given ID.
      parameters:
        - name: id
          in: path
          description: The ID of the mood to delete
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: The mood was deleted successfully
components:
  schemas:
    mood:
      type: object
      properties:
        id:
          type: integer
          description: The unique identifier for the mood.
        title:
          type: string
          description: The title of the mood.
        description:
          type: string
          description: A brief description of the mood.
        url:
          type: string
          description: The URL where the mood can be accessed.
        duration:
          type: integer
          description: The length of the mood in seconds.
        thumbnail_url:
          type: string
          description: The URL of the mood's thumbnail image.
        published_at:
          type: string
          format: date-time
          description: The date and time the mood was published.
        channel_id:
          type: integer
          description: The ID of the channel that the mood belongs to.
      required:
        - title
        - url
    moodInput:
      type: object
      properties:
        title:
          type: string
          description: The title
